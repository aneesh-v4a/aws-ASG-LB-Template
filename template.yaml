AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  This CloudFormation template deploys autoscaled and load balanced ec2 instances.

Parameters:

  Ec2KeyName:
    Description: KeyName to successfully SSH into instance
    Type: String
    Default: aneesh_learn
  
  VpcCIDR:
    Description: IP range (CIDR notation) for the VPC
    Type: String
    Default: 129.192.0.0/16

  LogBucket:
    Description: Name of the bucket to store ALB logs
    Type: String
    Default: ans-v4a-bkt2


Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VpcCIDR
      Tags:
        - Key: Name
          Value: My-VPC

  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: 129.192.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: ASG_Subnet1 (AZ0)
  
  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: 129.192.2.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: ASG_Subnet2 (AZ1)

  MyNetworkACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Aneesh_NACL

  ACLEntry1: 
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref MyNetworkACL
      RuleNumber: 100
      Protocol: 6
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80
  
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: My-gateway
  
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  AppRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref AppRouteTable
      DestinationCidrBlock: 0.0.0.0/0

  Subnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet1
      RouteTableId: !Ref AppRouteTable
  
  Subnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet2
      RouteTableId: !Ref AppRouteTable

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Load Balancer Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

  InstancesSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EC2 Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId:
          Fn::GetAtt:
          - LoadBalancerSecurityGroup
          - GroupId
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0

  MainPageLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: Aneesh_ec2_main_pagelaunchTemplate
      LaunchTemplateData:
        ImageId: ami-022d03f649d12a49d
        InstanceType: t2.micro
        KeyName: !Ref Ec2KeyName
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: Aneesh_ec2_main_page
        SecurityGroupIds:
          - !Ref InstancesSecurityGroup
        UserData: 
          Fn::Base64: !Sub | 
            #!/bin/bash
            yum update -y
            yum install -y httpd
            systemctl start httpd
            systemctl enable httpd
            usermod -a -G apache ec2-user
            chown -R ec2-user:apache /var/www
            chmod 2775 /var/www
            find /var/www -type d -exec chmod 2775 {} \;
            find /var/www -type f -exec chmod 0664 {} \;
            echo "This the main page of app" > /var/www/html/index.html
  
  AboutPageLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: Aneesh_ec2_aboutPage_launchTemplate
      LaunchTemplateData:
        ImageId: ami-022d03f649d12a49d
        InstanceType: t2.micro
        KeyName: !Ref Ec2KeyName
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: Aneesh_ec2_about_page
        SecurityGroupIds:
          - !Ref InstancesSecurityGroup 
        UserData: 
          Fn::Base64: !Sub | 
            #!/bin/bash
            yum update -y
            yum install -y httpd
            systemctl start httpd
            systemctl enable httpd
            usermod -a -G apache ec2-user
            chown -R ec2-user:apache /var/www
            chmod 2775 /var/www
            find /var/www -type d -exec chmod 2775 {} \;
            find /var/www -type f -exec chmod 0664 {} \;
            mkdir /var/www/html/about
            echo "This is not about us or anyone, but YOU !!!" > /var/www/html/about/index.html
            sudo echo "<VirtualHost *:80>
                    ServerName ${!GetAtt LearnerALB.DNSName}
                    DocumentRoot /var/www/html/about
                    <Directory /var/www/html/about>
                        AllowOverride All
                        Require all granted
                    </Directory>
                  </VirtualHost>" > /etc/httpd/conf.d/about.conf
            systemctl restart httpd

  MainPageTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 100
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: '200'
      Name: Scaled-MainPage-TG
      Port: 80
      Protocol: HTTP
      TargetType: instance
      UnhealthyThresholdCount: 3
      VpcId: !Ref VPC
  
  AboutPageTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 100
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: '200'
      Name: Scaled-AboutPage-TG
      Port: 80
      Protocol: HTTP
      TargetType: instance
      UnhealthyThresholdCount: 3
      VpcId: !Ref VPC

  LearnerALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Subnets:
        - !Ref Subnet1
        - !Ref Subnet2
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      Scheme: internet-facing
      Name: LearnerALB

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LearnerALB
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref MainPageTargetGroup
          Order: 1
  
  AboutPageRule:  
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Conditions:
        - Field: path-pattern
          Values:
            - /about*
      Actions:
        - Type: forward
          TargetGroupArn: !Ref AboutPageTargetGroup
      Priority: 1
      ListenerArn: !Ref LoadBalancerListener

  MainPageASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: Learning_ASG_MainPage
      DesiredCapacity: "1"
      LaunchTemplate: 
        LaunchTemplateId: !Ref MainPageLaunchTemplate
        Version: !GetAtt MainPageLaunchTemplate.LatestVersionNumber
      MaxSize: "2"
      MinSize: "1"
      TargetGroupARNs: 
        - !Ref MainPageTargetGroup
      VPCZoneIdentifier:
        - !Ref Subnet1
        - !Ref Subnet2  
  
  AboutPageASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: Learning_ASG_AboutPage
      DesiredCapacity: "1"
      LaunchTemplate: 
        LaunchTemplateId: !Ref AboutPageLaunchTemplate
        Version: !GetAtt AboutPageLaunchTemplate.LatestVersionNumber
      MaxSize: "2"
      MinSize: "1"
      TargetGroupARNs: 
        - !Ref AboutPageTargetGroup
      VPCZoneIdentifier:
        - !Ref Subnet1
        - !Ref Subnet2  